#include <iostream> //Стандартная библиотека ввода-вывода
#include <cstring> //Стандартная библиотека для работы со строками
using namespace std;
 
char PlayerName1[80], //Переменные для имен игроков
     PlayerName2[80]; 
     
char cells[9] = {'-', '-', '-', '-', '-', '-', '-', '-', '-'}; 
//в нем хранятся данные о клеточках ("-" - пустая, "Х" - первого игрока, "О" - второго)

char win='-'; //Символ победы ("-" - ничья, "Х" - первого игрока, "О" - второго)

int main () 
{
//Вводить имена пользователей до тех пор, пока они равны
   do {
      cout << "Enter the name of the 1st player: ";
      gets(PlayerName1); 
//Функция gets использована для ввода имен игроков с пробелами
//в ином случае имя показывалось бы до первого пробела
      cout << "Enter the name of the 2st player: ";
      gets(PlayerName2);
      cout << "\n";
      } while (!strcmp(PlayerName1, PlayerName2));
//Функция из cstring для проверки разности строк она возвращает 0, если строки равны

show_cells();
 
   for (int move = 1; move <= 9; move++) 
   { //Цикл на 9 ходов, т.к. у нас 9 клеточек
      if (move % 2) make_move(1); //Если ход нечетный, то остаток от деления на 2 будет равен 1 (то есть true)
      else make_move(2); //Если четный, то 0 (false). Тогда если ход нечетный ходит первый игрок,
      show_cells(); //а если четный, то второй
      
      if (move >= 5)
//Если номер хода 5 или больше, то проходит проверка на победу (раньше, чем на 5-ом ходе победить нельзя)*/
      {
          win=check(); //Символ победы - это возвращенное значение функции проверки
          if(win!='-') //Если символ победы не "-" (то есть кто-то победил),
             break; //то нету смысла в дальнейших ходах и цикл прерывается
      }
   }

   //Цикл закончился и ничто не победил - ничья

    result(); //Функция, которая выводит результат

   system ("pause");
//system ("pause") использовано для того, чтобы программа не закрывалась после выполнения
//функция использована для того, чтобы игру можно было свободно запускать с .exe-файла, а не через cmd
   return 0;
}

